[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[ext_resource path="res://addons/quaternius-ultimate-spaceships-pack/meshes/exhaust/exhaust_noise_texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Fade"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "Emission"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
render_mode blend_add, specular_disabled, async_visible, unshaded;

uniform sampler2D tex_frg_4;
uniform vec4 Emission : hint_color;
uniform float Fade = 1;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:10
	float n_out10p0 = n_out2p0.x;
	float n_out10p1 = n_out2p0.y;
	float n_out10p2 = n_out2p0.z;

// ScalarOp:14
	float n_in14p1 = 3.00000;
	float n_out14p0 = pow(n_out10p1, n_in14p1);

// Input:3
	float n_out3p0 = TIME;

// ScalarOp:15
	float n_in15p1 = 2.00000;
	float n_out15p0 = n_out3p0 * n_in15p1;

// ScalarOp:12
	float n_out12p0 = n_out14p0 + n_out15p0;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out10p0, n_out12p0, n_in11p2);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out11p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// ColorUniform:6
	vec3 n_out6p0 = Emission.rgb;
	float n_out6p1 = Emission.a;

// VectorOp:7
	vec3 n_out7p0 = n_out4p0 * n_out6p0;

// ScalarUniform:17
	float n_out17p0 = Fade;

// ScalarOp:16
	float n_out16p0 = pow(n_out10p1, n_out17p0);

// ScalarOp:18
	float n_out18p0 = n_out6p1 * n_out16p0;

// Output:0
	ALBEDO = n_out7p0;
	ALPHA = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 369.6, 173.36 )
modes/blend = 1
modes/specular = 4
flags/unshaded = true
nodes/fragment/0/position = Vector2( 920, 120 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -1540, 260 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -1460, 780 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -200, 0 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( -180, 280 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( 320, 100 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1340, 260 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -500, 320 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -760, 440 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -1080, 400 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -1220, 740 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 40, 480 )
nodes/fragment/17/node = SubResource( 13 )
nodes/fragment/17/position = Vector2( -420, 580 )
nodes/fragment/18/node = SubResource( 14 )
nodes/fragment/18/position = Vector2( 340, 340 )
nodes/fragment/connections = PoolIntArray( 7, 0, 0, 0, 2, 0, 10, 0, 4, 0, 7, 0, 6, 0, 7, 1, 10, 0, 11, 0, 11, 0, 4, 0, 10, 1, 14, 0, 14, 0, 12, 0, 12, 0, 11, 1, 3, 0, 15, 0, 15, 0, 12, 1, 10, 1, 16, 0, 17, 0, 16, 1, 6, 1, 18, 0, 16, 0, 18, 1, 18, 0, 0, 1 )

[resource]
shader = SubResource( 12 )
shader_param/Emission = Color( 0.364706, 0.72549, 1, 1 )
shader_param/Fade = 1.4
